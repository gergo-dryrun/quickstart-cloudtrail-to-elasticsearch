AWSTemplateFormatVersion: '2010-09-09'
Description: 'Creates and configures cloudtrail /s3 bucket/ cloudwatch/ lambda / iam executioner role '
Parameters:
  ElasticsearchStackName:
    Description: ElasticsearchStackName
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"
    Default: "QuickstartElasticsearchDomain"

Resources:

  S3Bucket:
    DeletionPolicy: Retain
    Type: AWS::S3::Bucket
    Properties: {}

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: S3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Sid: AWSCloudTrailAclCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource:
              !Sub |-
                arn:aws:s3:::${S3Bucket}
          -
            Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource:
              !Sub |-
                arn:aws:s3:::${S3Bucket}/AWSLogs/${AWS::AccountId}/*
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control

  CloudWatchGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 3

  CloudTrailRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /

  CloudTrailRolePolicies:
    DependsOn: CloudWatchGroup
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: logs-put
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              -
                !GetAtt CloudWatchGroup.Arn
      Roles:
        -
          !Ref CloudTrailRole

  Cloudtrail:
    Type: AWS::CloudTrail::Trail
    DependsOn: BucketPolicy
    Properties:
      CloudWatchLogsLogGroupArn: !GetAtt CloudWatchGroup.Arn
      CloudWatchLogsRoleArn: !GetAtt CloudTrailRole.Arn
      EnableLogFileValidation: true
      IncludeGlobalServiceEvents: true
      IsLogging: true
      IsMultiRegionTrail: true
      S3BucketName: !Ref S3Bucket

  SubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    DependsOn: LambdaInvokePermission
    Properties:
      LogGroupName: !Ref CloudWatchGroup
      FilterPattern: ""
      DestinationArn: !GetAtt LambdaFunction.Arn

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt LambdaFunction.Arn
      Action: lambda:InvokeFunction
      Principal: !Sub
        - logs.${Region}.amazonaws.com
        - { Region: !Ref AWS::Region }
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !GetAtt CloudWatchGroup.Arn

  LambdaExecutionerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /

  LambdaRolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: es-http-post
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - es:ESHttpPost
            Resource: !Sub
              - ${ARN}/*
              - { ARN: !ImportValue Fn::Sub: ${ElasticsearchStackName}-DomainArn}
          -
            Effect: Allow
            Action:
              - logs:CreateLogGroup
            Resource:
              !Sub |-
                arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
          -
            Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              !Sub |-
                arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cloudwatch-stream-to-elasticsearch:*
      Roles:
        -
          !Ref LambdaExecutionerRole

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: cloudwatch-stream-to-elasticsearch
      Runtime: nodejs4.3
      Handler: cwlogs-streamer.handler
      Role: !GetAtt LambdaExecutionerRole.Arn
      Environment:
        Variables:
          ES_ENDPOINT: !ImportValue Fn::Sub ${ElasticsearchStackName}-DomainArn
          PREFIX: cwl-
      Code:
        S3Bucket: quickstart-cloudtrail-to-elasticsearch
        S3Key: code/cwlogs-streamer.zip
Outputs:
